{"version":3,"sources":["components/UI/Form/Form.module.scss","components/UI/Input/Input.module.scss","components/UI/Button/Button.module.scss","assets/images/main-logo.png","assets/images/checked.png","assets/images/b2b.jpg","assets/images/box.jpg","assets/images/truck.jpg","axios-order.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","helper/helper.js","components/UI/Button/Button.js","components/UI/Form/Form.js","components/UI/Input/Input.js","assets/image.js","components/UI/PopUp/Popup.js","components/UI/Spinner/Spinner.js","components/AdminPanel/InvoiceForm/InvoiceForm.js","components/AdminPanel/CreateInvoice/CreateInvoice.js","components/AdminPanel/EditInvoice/EditInvoice.js","components/context/Auth-Context.js","containers/AdminPanel/AdminPanel.js","components/Auth/Auth.js","App.js","index.js"],"names":["module","exports","insctance","axios","create","baseURL","Backdrop","props","show","className","onClick","close","Modal","style","transform","display","children","epochToDate","epoch","date","Date","getDate","getMonth","getFullYear","createInputConfig","elemType","inpType","label","placeholder","disabled","value","elemConfig","button","type","styles","Button","btnStyle","join","handleClick","Form","id","column","FormColumn","onSubmit","event","onSubmitHandler","formStyle","isValid","FormBox__Error","FormBox__Error__Active","errText","btnText","Input","forwardRef","ref","fieldType","elemtype","name","inpStyle","onChange","addChangeHandle","onChangeHandler","onBlur","addBlurHandle","onBlurHandler","defaultValue","autoComplete","mask","maskChar","alwaysShowMask","options","map","el","key","displayValie","require","Popup","src","checked","alt","Spinner","InvoiceForm","allInputs","Object","keys","formState","invoiceForm","inp","changeInputHandler","showForm","closeForm","title","heading","formSubmit","btnCloseStyle","completeText","errorText","CreateInvoice","displayErrorText","EditInvoice","AuthContext","React","createContext","isAuth","login","AuthContextProvider","useState","authState","setAuthState","Provider","token","sessionStorage","getItem","AdminPanel","trackingNumber","fromCountry","fromCity","toCountry","toCity","estimatedDeliveryDate","validation","delivered","recipient","emptyFieldsError","notUniqueId","errorDate","showAddForm","showUpdateForm","submitted","setFormState","noId","displaySearchErrorText","searchResult","showSearchResults","validResults","showSpinner","searchValue","searchState","setSearchState","searchInput","useRef","authContext","useContext","validateEmptyFields","useCallback","isFormValid","cloneinvoiceForm","val","handleFormSubmit","e","preventDefault","epochDate","order","reverseDate","split","reverse","getTime","post","then","response","console","log","prevState","catch","error","data","message","indexOf","handleFormInputChange","inpId","target","handleFormUpdateSubmit","undefined","getEpochTime","patch","handleClose","document","querySelector","resetState","elem","reset","InvoiceType","current","focus","get","result","delivery","handleSearchSubmit","handleSearchInputChange","oldState","window","confirm","delete","removeItem","Auth","inputConfig","username","password","emptyFields","wrongFields","authConfig","setAuthConfig","handleChange","cloneInputConfig","inputs","add","status","setItem","access_token","handleAuth","App","interceptors","request","use","req","headers","Authorization","basename","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.090f4ec4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__2_yHn\",\"FormColumn\":\"Form_FormColumn__3iy4X\",\"FormBox\":\"Form_FormBox__2fh4_\",\"FormBox__Error\":\"Form_FormBox__Error__2Jds_\",\"FormBox__Error__Active\":\"Form_FormBox__Error__Active__lulHx\",\"InvoiceForm\":\"Form_InvoiceForm__3CDN0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form-Input\":\"Input_Form-Input__3gD4L\",\"Auth-Form-Input\":\"Input_Auth-Form-Input__Gzryb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__15NJU\",\"Button__Green\":\"Button_Button__Green__2CkE3\",\"Button__Green--Active\":\"Button_Button__Green--Active__3p7_k\",\"Button__GreenMarginTop\":\"Button_Button__GreenMarginTop__kQ1D3\",\"Button__White\":\"Button_Button__White__3Ckme\",\"Button__Red\":\"Button_Button__Red__3zAya\",\"Button__Blue\":\"Button_Button__Blue__Xc0GF\"};","module.exports = __webpack_public_path__ + \"static/media/main-logo.a5230cd6.png\";","module.exports = __webpack_public_path__ + \"static/media/checked.da188ccb.png\";","module.exports = __webpack_public_path__ + \"static/media/b2b.39db7eb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/box.0e601bd8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/truck.9e2e6db0.jpg\";","import axios from 'axios';\r\n\r\nconst insctance = axios.create({\r\n      baseURL: 'https://exmoto.herokuapp.com/api/v1'\r\n});\r\n\r\nexport default insctance;","import React from 'react';\r\n\r\nimport './Backdrop.scss';\r\n\r\nconst Backdrop = ( props ) => (\r\n     props.show ? <div className='Backdrop' onClick={props.close}></div> : null\r\n);\r\n\r\nexport default Backdrop; ","import React from 'react';\r\n\r\nimport Backdrop from './../Backdrop/Backdrop';\r\nimport './Modal.scss';\r\n\r\nconst Modal = props => (\r\n   <>\r\n      <Backdrop show={props.show} close={props.close}/>\r\n      <div className=\"Modal\" \r\n         style={{transform: props.show ?  'translate(50%, 50%)' : 'translateY(0)',\r\n         display: props.show ? 'block' : 'none'}}>\r\n         {props.children}\r\n         <div className=\"Close\" onClick={props.close}></div>\r\n      </div>\r\n   </>\r\n);\r\n\r\nexport default Modal;\r\n","export const getEpochTime = (date) => {\r\n   const reverseDate = date.split('-').reverse().join('-');\r\n   const epochDate = new Date(reverseDate);\r\n   return epochDate.getTime();\r\n};\r\n\r\nexport const epochToDate = (epoch) => {        \r\n   const date = new Date(epoch);\r\n   return `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`;\r\n}\r\n\r\n// Конфигурация Input\r\nexport const createInputConfig = (elemType, inpType, label, placeholder, disabled) => ({\r\n   elemType: elemType,\r\n   disabled: disabled,\r\n   value: '',\r\n   elemConfig: {\r\n      inpType: inpType,\r\n      label: label,\r\n      placeholder: placeholder,\r\n   }\r\n});","import React from 'react';\r\nimport styles from './Button.module.scss';\r\n\r\nconst button = props => (\r\n   <button \r\n      type=\"submit\" \r\n      className={[styles.Button, styles[props.btnStyle]].join(' ')} \r\n      onClick={props.handleClick}\r\n   >\r\n      {props.children}\r\n   </button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\n\r\nimport styles from './Form.module.scss';\r\nimport Button from './../Button/Button';\r\n\r\nconst Form = props => {\r\n   return (\r\n      <form id={props.id} className={ props.column ? [styles.Form, styles.FormColumn].join(' ') : styles.Form} onSubmit={event => props.onSubmitHandler(event)}>  \r\n         <div className={styles[props.formStyle]}>\r\n            {props.children}\r\n            <p className={props.isValid ? styles.FormBox__Error :  [styles.FormBox__Error,\r\n               styles.FormBox__Error__Active].join(' ')}>\r\n               {props.errText}\r\n            </p>\r\n         </div>\r\n         <Button btnStyle={props.btnStyle}>{props.btnText}</Button>   \r\n   </form>\r\n   );\r\n}\r\n\r\nexport default Form;\r\n","import React, { forwardRef } from 'react';\r\n\r\nimport styles from './Input.module.scss';\r\nimport InputMask from 'react-input-mask';\r\n\r\nconst Input = forwardRef((props, ref) => {\r\n   let fieldType = null;\r\n   switch(props.elemtype) {\r\n      case('input'): fieldType =\r\n         <>\r\n             <label className=\"InvoiceForm__Label\">{props.elemConfig.label}</label>\r\n            <input\r\n               type={props.elemConfig.inpType} \r\n               ref={ref}\r\n               name={props.name}\r\n               className={styles[props.inpStyle]}\r\n               placeholder={props.elemConfig.placeholder} \r\n               onChange={props.addChangeHandle  ? event => props.onChangeHandler(event) : null}\r\n               onBlur={props.addBlurHandle ? event =>props.onBlurHandler(event) : null}\r\n               disabled={props.disabled}\r\n               defaultValue={props.defaultValue}\r\n               autoComplete={props.autoComplete}\r\n            />\r\n         </>\r\n      break;\r\n      case('input-mask'): fieldType =\r\n         <>\r\n            <label className=\"InvoiceForm__Label\">{props.elemConfig.label}</label>\r\n            <InputMask\r\n               mask=\"99-99-9999\" \r\n               maskChar='_'\r\n               name={props.name}\r\n               alwaysShowMask={true}\r\n               type={props.elemConfig.inpType} \r\n               className={styles[props.inpStyle]}\r\n               onChange={props.addChangeHandle  ? event => props.onChangeHandler(event) : null}\r\n               onBlur={props.addBlurHandle ? event =>props.onBlurHandler(event) : null}\r\n               autoComplete={props.autoComplete}\r\n               disabled={props.disabled}\r\n               value={props.defaultValue}\r\n            />\r\n         </>\r\n      break;\r\n      case('select'): fieldType =\r\n         <>\r\n         <label className=\"InvoiceForm__Label\">{props.elemConfig.label}</label>\r\n            <select\r\n               name={props.name}\r\n               className={styles[props.inpStyle]}\r\n               onChange={props.addChangeHandle  ?  props.onChangeHandler : null}\r\n               value={props.defaultValue}\r\n            >\r\n               {props.elemConfig.options.map(el => (\r\n                  <option\r\n                     key={el.value}\r\n                     value={el.value}\r\n                  >\r\n                     {el.displayValie}   \r\n                  </option>\r\n\r\n               ))}\r\n            </select>\r\n         </>\r\n      break;   \r\n      default:  fieldType = <input />         \r\n   }\r\n      \r\n   return (     \r\n      <>    \r\n         {fieldType}\r\n      </>\r\n)});\r\n\r\nexport default Input;","export const B2b = require('./images/b2b.jpg'); \r\nexport const Box = require('./images/box.jpg'); \r\nexport const Truck = require('./images/truck.jpg'); \r\n","import React from 'react';\r\nimport checked from './../../../assets/images/checked.png';\r\nimport './Popup.scss';\r\n\r\nconst Popup = props => (\r\n    <div className=\"Popup\">\r\n       <p className=\"Popup__Text\">Накладная добавлена</p>\r\n       <img src={checked} className=\"Popup__Icon\" alt=\"checked\"/>\r\n    </div>\r\n);\r\n\r\nexport default Popup;","import React from 'react';\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = props => (\r\n      <div className=\"lds-spinner\">\r\n         <div></div>\r\n         <div></div>\r\n         <div></div>\r\n         <div></div>\r\n         <div></div>\r\n         <div></div>\r\n         <div></div>\r\n         <div></div>\r\n         <div></div>\r\n         <div></div>\r\n         <div></div>\r\n         <div></div>\r\n      </div>\r\n);\r\n\r\nexport default Spinner;","import  React from 'react';\r\n\r\nimport './InvoiceForm.scss';\r\nimport Input from '../../UI/Input/Input';\r\nimport Form from '../../UI/Form/Form';\r\n\r\nconst InvoiceForm = props => {\r\n   const allInputs = Object.keys(props.formState.invoiceForm).map(inp => {\r\n      return (\r\n         <Input \r\n            key={inp}\r\n            elemtype={props.formState.invoiceForm[inp].elemType} \r\n            elemConfig={props.formState.invoiceForm[inp].elemConfig}\r\n            onChangeHandler={(event) => props.changeInputHandler(event, inp)}\r\n            addChangeHandle={true}\r\n            addBlurHandle={false}\r\n            inpStyle='Form-Input'\r\n            disabled={props.formState.invoiceForm[inp].disabled}\r\n            defaultValue={props.formState.invoiceForm[inp].value}\r\n         />\r\n         );\r\n   });\r\n   return (\r\n      <div className=\"InvoiceForm-Box\" style={{display: props.showForm ? 'block' : 'none'}}>\r\n         <div className=\"InvoiceForm__Close\" onClick={props.closeForm} title=\"Закрыть\"></div>\r\n         <h2 className=\"InvoiceForm-Box__Header\">{props.heading}</h2>\r\n         <Form\r\n            id={'addForm'}\r\n            onSubmitHandler={event => props.formSubmit(event)}\r\n            isValid={props.isValid}\r\n            btnText={props.btnText}\r\n            btnStyle='Button__GreenMarginTop'\r\n            btnCloseStyle=\"Button__Blue\"\r\n            formStyle='InvoiceForm'\r\n            column={true}\r\n            completeText='Накладная успешно добавлена'\r\n            disabled={props.formState.invoiceForm.disabled}\r\n            errText={props.errorText}\r\n         >\r\n          {allInputs}\r\n         </Form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default InvoiceForm;","import React from 'react';\r\n\r\nimport InvoiceForm from '../InvoiceForm/InvoiceForm'\r\n\r\nconst CreateInvoice = props => {\r\n   return (\r\n      <>\r\n         <InvoiceForm \r\n            formState={props.formState} \r\n            showForm={props.showForm}\r\n            formSubmit={event => props.formSubmit(event)}\r\n            changeInputHandler={props.changeInputHandler}\r\n            isValid={props.formState.isValid}\r\n            errorText={props.formState.displayErrorText}\r\n            closeForm={props.closeForm}\r\n            heading={'Добавить накладную'}\r\n            btnText={'Добавить'}\r\n         />\r\n      </>\r\n   );\r\n\r\n};\r\n\r\nexport default CreateInvoice;","import React from 'react';\r\n\r\nimport InvoiceForm from '../InvoiceForm/InvoiceForm'\r\n\r\nconst EditInvoice = props => {\r\n   return (\r\n      <>\r\n         <InvoiceForm \r\n            formState={props.formState} \r\n            showForm={props.showForm}\r\n            formSubmit={event => props.formSubmit(event)}\r\n            changeInputHandler={props.changeInputHandler}\r\n            isValid={props.formState.isValid}\r\n            errorText={props.formState.displayErrorText}\r\n            closeForm={props.closeForm}\r\n            heading={'Редактировать накладную'}\r\n            btnText={'Изменить'}\r\n         />\r\n      </>\r\n   );\r\n\r\n};\r\n\r\nexport default EditInvoice;","import React, { useState } from 'react';\r\n\r\nexport const AuthContext = React.createContext({\r\n    isAuth: false,\r\n    login: () => {}\r\n});\r\n\r\nconst AuthContextProvider  = props => {\r\n    const [authState, setAuthState] = useState(false);\r\n    const handleLogin = () => {\r\n        const token = sessionStorage.getItem('access__token');\r\n        setAuthState(token);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{login: handleLogin, isAuth: authState}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthContextProvider;","import React, { useCallback, useContext, useRef, useState } from 'react';\r\nimport './AdminPanel.scss';\r\nimport axios from './../../axios-order';\r\nimport Input from './../../components/UI/Input/Input';\r\nimport Form from './../../components/UI/Form/Form';\r\nimport Button from './../../components/UI/Button/Button';\r\nimport Popup from './../../components/UI/PopUp/Popup';\r\nimport Modal from './../../components/UI/Modal/Modal';\r\nimport Spinner from './../../components/UI/Spinner/Spinner';\r\nimport CreateInvoice from './../../components/AdminPanel/CreateInvoice/CreateInvoice';\r\nimport EditInvoice from './../../components/AdminPanel/EditInvoice/EditInvoice';\r\nimport { getEpochTime, createInputConfig, epochToDate } from './../../helper/helper';\r\nimport { AuthContext } from './../../components/context/Auth-Context';\r\n\r\nconst AdminPanel = props => {\r\n   const [formState, setFormState] = useState({ \r\n      invoiceForm: {\r\n         trackingNumber: createInputConfig('input', 'text', 'Номер накладной', 'Пример: 6789487'),\r\n         fromCountry: createInputConfig('input','text', 'Из какой страны посылка?', 'Пример: Молдова'),\r\n         fromCity: createInputConfig('input','text', 'Из какого города посылка?', 'Пример:  Кишинев'),\r\n         toCountry: createInputConfig('input', 'text', 'Страна оптравления посылки', 'Пример: Румыния'),\r\n         toCity: createInputConfig('input','text', 'Пример: Бухарест', 'Город отправления посылки'),\r\n         estimatedDeliveryDate: {\r\n            elemType: 'input-mask',\r\n            elemConfig: {\r\n               inpType: 'text',\r\n               label: 'Предпологаемое время доставки. ДД/ММ/ГГГГ',\r\n            },\r\n            validation: true,\r\n            value: ''\r\n         },\r\n         delivered: {\r\n            elemType: 'select',\r\n            elemConfig: {\r\n                  options: [\r\n                     {value: '', displayValie: '-'},\r\n                     {value: false, displayValie: 'В Пути'},\r\n                     {value: true, displayValie: 'Доставлено'},\r\n                  ],\r\n                  label: 'Статус доставки'\r\n            },\r\n            validation: true,\r\n            value: ''\r\n         },\r\n         recipient: {\r\n            elemType: 'input',\r\n            elemConfig: {\r\n               inpType: 'text',\r\n               placeholder: 'Пример: Валера Молдавский',\r\n               label: 'Получатель',\r\n            },\r\n            disabled: true,\r\n            value: ''\r\n         }\r\n      },  \r\n      errorText: {\r\n         emptyFieldsError: \"Заполните пустые поля\",\r\n         notUniqueId: \"Накладная с таким номером уже есть\",\r\n         errorDate: \"Дата доставки не может быть раньше текущей\"\r\n      },\r\n      isValid: true, \r\n      showAddForm: false,\r\n      showUpdateForm: false,\r\n      submitted: false,\r\n      displayErrorText: ''\r\n   });\r\n   const [searchState, setSearchState] = useState({\r\n      elemType: 'input',\r\n      elemConfig: {\r\n         inpType: 'text',\r\n         placeholder: '',\r\n      },\r\n      errorText: {\r\n         emptyFieldsError: \"Заполните пустое поле\",\r\n         noId: \"С таким номером нет накладной\",\r\n      },\r\n      displaySearchErrorText: '',\r\n      searchResult: {},\r\n      showSearchResults: false,\r\n      validResults: true,\r\n      showSpinner: false,\r\n      searchValue: '',\r\n   });\r\n   const searchInput = useRef(null);\r\n   const authContext = useContext(AuthContext);\r\n   //  Отсеживание введенных значений в форме ПОИСКА накладной\r\n   const handleSearchInputChange = e => {\r\n      let value = e.target.value;\r\n      setSearchState(prevState => {\r\n         return {\r\n            ...prevState,\r\n            searchValue: value\r\n         };\r\n      })\r\n   };\r\n   // Сабмит поиска накладной\r\n   const handleSearchSubmit = e => {\r\n      e.preventDefault();\r\n      searchInput.current.focus();\r\n\r\n      let isValid = true;\r\n      if(searchState.searchValue === '') {\r\n         isValid = false;\r\n      }\r\n      if(isValid) {\r\n         axios.get(`/deliveries/${searchState.searchValue}`)\r\n         .then(response => {\r\n            const result = {}\r\n            const localStateKey = Object.keys(formState.invoiceForm);\r\n            for (let key of localStateKey) {\r\n               result[key] = response.data.data.delivery[key];\r\n               if (key === 'estimatedDeliveryDate') {\r\n                  result[key] = epochToDate(response.data.data.delivery[key])\r\n               }\r\n            }\r\n            setSearchState(prevState => {\r\n               return {\r\n                  ...prevState,\r\n                  searchResult: {...result},\r\n                  showSearchResults: true,\r\n               };\r\n            });\r\n         })\r\n         .catch(error => {\r\n            setSearchState(prevState => {\r\n               return {\r\n                  ...prevState,\r\n                  showSearchResults: false,\r\n                  validResults: false,\r\n                  displaySearchErrorText: searchState.errorText.noId\r\n               };\r\n            });\r\n         })\r\n      }\r\n      setSearchState(prevState => {\r\n         return {\r\n            ...prevState,\r\n            validResults: isValid, \r\n            showSearchResults: false,\r\n            displaySearchErrorText: searchState.errorText.emptyFieldsError\r\n         };\r\n      });\r\n   };\r\n\r\n   // Сбрасывает ошибки, если кликнуть в область вне инпута\r\n   const handleSearchInputBlur = () => {\r\n      setSearchState(prevState => {\r\n         return {\r\n            ...prevState,\r\n            validResults: true\r\n         };\r\n      });\r\n   };\r\n\r\n   const validateEmptyFields = useCallback(() => {\r\n      let isFormValid = true,  \r\n      cloneinvoiceForm = Object.keys(formState.invoiceForm);    \r\n\r\n     for (let val of cloneinvoiceForm) {\r\n        if (val === 'recipient' && formState.invoiceForm.recipient.disabled === true) {\r\n           continue;\r\n        } else if (formState.invoiceForm[val].value === '') {\r\n           isFormValid = false;\r\n           break;\r\n        } else {\r\n           isFormValid = true;\r\n        }\r\n     }\r\n     return {isFormValid, cloneinvoiceForm};\r\n   }, [formState.invoiceForm]);\r\n\r\n   //--------------------------Добавление--------------------------//\r\n\r\n   // Сабмит новой накладной\r\n   const handleFormSubmit = useCallback(e => {\r\n      e.preventDefault();\r\n      const {isFormValid, cloneinvoiceForm} = validateEmptyFields();  \r\n         if (isFormValid) {\r\n            let order = {},\r\n                reverseDate = '',\r\n                epochDate;\r\n            for (let value of cloneinvoiceForm) {\r\n               order[value] = formState.invoiceForm[value].value;\r\n               if (value === 'estimatedDeliveryDate') {\r\n                  reverseDate = formState.invoiceForm[value].value.split('-').reverse().join('-');\r\n                  epochDate = new Date(reverseDate);\r\n                  order[value] = epochDate.getTime();\r\n               }\r\n            }\r\n            axios.post('/deliveries', order )\r\n            .then(response => {\r\n               console.log(response);\r\n               setFormState(prevState => {\r\n                  return {\r\n                     ...prevState,\r\n                     submitted: true\r\n                  }\r\n               });\r\n            })\r\n            .catch(error =>{\r\n               let errText; \r\n               if(error.response.data.message.indexOf('Estimated') !== -1) {\r\n                  errText = formState.errorText.errorDate\r\n               }\r\n               if (error.response.data.message.indexOf('duplicate') !== -1) {\r\n                  errText = formState.errorText.notUniqueId;\r\n               }\r\n               setFormState(prevState => {\r\n                  return {\r\n                     ...prevState,\r\n                     submitted: false,\r\n                     isValid: false,\r\n                     displayErrorText: errText\r\n                  }\r\n               });\r\n            })\r\n         }\r\n         setFormState(prevState => {\r\n            return {\r\n               ...prevState,\r\n               isValid: isFormValid,\r\n               displayErrorText: formState.errorText.emptyFieldsError\r\n            }\r\n         });\r\n   },[validateEmptyFields, formState.errorText.emptyFieldsError,formState.errorText.errorDate,formState.errorText.notUniqueId,formState.invoiceForm]);\r\n  \r\n   // Отсеживание введенных значений в форме ДОБАВЛЕНИЯ/РЕДАКТИРОВАНИЯ накладной\r\n   const handleFormInputChange = (e, inpId) => {\r\n      const cloneinvoiceForm = {...formState.invoiceForm};\r\n      let value = e.target.value;\r\n      cloneinvoiceForm[inpId].value = value;\r\n\r\n      if (cloneinvoiceForm[inpId].value === 'true') {\r\n         cloneinvoiceForm.recipient.disabled = false;\r\n      } \r\n      if (cloneinvoiceForm[inpId].value === 'false') {\r\n         cloneinvoiceForm.recipient.disabled = true;\r\n      }\r\n      setFormState(prevState => {\r\n         return {\r\n            ...prevState,\r\n            invoiceForm: {\r\n               ...cloneinvoiceForm\r\n            }\r\n         }\r\n      });\r\n   };\r\n\r\n   // Показывать форму добавления новой наладной\r\n   const handleAddFormShow = () => {\r\n      setFormState(prevState => ({\r\n            ...prevState,\r\n            showAddForm: true,\r\n            showUpdateForm: false\r\n         }))};\r\n    //--------------------------Редактирование--------------------------//\r\n   // Показывать форму редактиования  наладной\r\n   const handleUpdateFormShow = () => {\r\n      const oldState = {...formState.invoiceForm};\r\n      for (let key in searchState.searchResult) {\r\n         oldState[key].value = searchState.searchResult[key];\r\n         if (searchState.searchResult['delivered'] === true) {\r\n            oldState['recipient'].disabled = false;\r\n         }\r\n      }\r\n      setFormState({\r\n         ...formState,\r\n         showUpdateForm: true,\r\n         showAddForm: false,\r\n      });\r\n   };\r\n   console.log(formState);\r\n   // Подтвердить изменения накладной\r\n   const handleFormUpdateSubmit = e => {\r\n      e.preventDefault();\r\n      const {isFormValid, cloneinvoiceForm} = validateEmptyFields();    \r\n      setFormState(prevState => {\r\n          return {\r\n             ...prevState,\r\n             isValid: isFormValid,\r\n             displayErrorText: formState.errorText.emptyFieldsError\r\n          }\r\n       });\r\n \r\n       if (isFormValid) {\r\n          let order = {};\r\n          for (let value of cloneinvoiceForm) {\r\n             if (formState.invoiceForm[value].value !== searchState.searchResult[value]) {\r\n                order[value] = formState.invoiceForm[value].value;\r\n             } \r\n          }\r\n          if (order.estimatedDeliveryDate !== undefined) {\r\n             const date = order['estimatedDeliveryDate']; \r\n             order.estimatedDeliveryDate = getEpochTime(date);\r\n          }\r\n          console.log(order);\r\n          axios.patch(`/deliveries/${searchState.searchResult.trackingNumber}`,  order)\r\n          .then(response => {\r\n             console.log(response);\r\n             setFormState(prevState => {\r\n                return {\r\n                   ...prevState,\r\n                   submitted: true\r\n                }\r\n             });\r\n          })\r\n          .catch(error =>{\r\n             let errText; \r\n             if(error.response.data.message.indexOf('Estimated') !== -1) {\r\n                errText = formState.errorText.errorDate\r\n             }\r\n             if (error.response.data.message.indexOf('duplicate') !== -1) {\r\n                errText = formState.errorText.notUniqueId;\r\n             }\r\n             setFormState(prevState => {\r\n                return {\r\n                   ...prevState,\r\n                   submitted: false,\r\n                   isValid: false,\r\n                   displayErrorText: errText\r\n                }\r\n          });\r\n       })\r\n    }\r\n   };\r\n    //--------------------------Удаление накладной--------------------------//\r\n   // Удаление накладной\r\n   const handleDeleteInvoice =  () => {\r\n      if (window.confirm(\"Уверены что хотите удалить эту накладную?\")) {\r\n         axios.delete(`/deliveries/${searchState.searchResult.trackingNumber}`)\r\n         .then(response => {\r\n            console.log(response);\r\n            handleClose();\r\n         })\r\n         .catch(error => {\r\n            console.log(error);\r\n         })\r\n      }\r\n   };\r\n//--------------------------Закрытие попа-апа--------------------------//\r\n   // Закорыть поп-ап  добавления накладной\r\n   const handleClose = () => {\r\n      const Form = document.querySelector('#addForm');      \r\n      const resetState = {...formState.invoiceForm};\r\n\r\n      for(let elem in resetState) {resetState[elem].value = '';}\r\n   \r\n      setFormState(prevState => {\r\n         return {\r\n            ...prevState,\r\n               invoiceForm: {\r\n                  ...resetState,\r\n               },\r\n               submitted: false,\r\n               isValid: true,\r\n               showAddForm: false,\r\n               showUpdateForm: false,\r\n         }\r\n      });\r\n      setSearchState(prevState => {\r\n         return {\r\n            ...prevState,\r\n            searchResult: {},\r\n            showSearchResults: false\r\n         }\r\n      })\r\n      Form.reset();\r\n   };\r\n\r\n   const removeSessionKey = key => {\r\n      sessionStorage.removeItem(key);\r\n      authContext.login();\r\n   }; \r\n\r\n\r\n   let InvoiceType = null;\r\n      if (formState.showAddForm) {\r\n         InvoiceType = \r\n         <CreateInvoice \r\n            formState={formState} \r\n            showForm={formState.showAddForm}\r\n            formSubmit={event => handleFormSubmit(event)}\r\n            changeInputHandler={(event, inpId) => handleFormInputChange(event, inpId)}\r\n            isValid={formState.isValid}\r\n            errorText={formState.displayErrorText}\r\n            closeForm={handleClose}\r\n            />;\r\n      } else if (formState.showUpdateForm) {\r\n         InvoiceType = \r\n         <EditInvoice \r\n            showForm={formState.showUpdateForm}\r\n            formState={formState} \r\n            formSubmit={event => handleFormUpdateSubmit(event)}\r\n            changeInputHandler={(event, inpId) => handleFormInputChange(event, inpId)}\r\n            isValid={formState.isValid}\r\n            errorText={formState.displayErrorText}\r\n            closeForm={handleClose}\r\n            />  \r\n      } else {InvoiceType = null;}\r\n\r\n   return (\r\n      <div className=\"Admin\">\r\n         <div className=\"Left-Side\">\r\n            <div className=\"Left-Side-Box\">\r\n                  <Button\r\n                     btnStyle={formState.showAddForm ? 'Button__Green--Active' : 'Button__Green'}\r\n                     handleClick={handleAddFormShow}\r\n                  >\r\n                     Добавить накладную\r\n                  </Button>\r\n               <div className=\"Search\">\r\n                  <p className=\"Search__Title\">Найти накладную</p>\r\n                  <Form \r\n                     onSubmitHandler={event => handleSearchSubmit(event)}\r\n                     isValid={searchState.validResults}\r\n                     errText={searchState.displaySearchErrorText}\r\n                     btnText='НАЙТИ'\r\n                     btnStyle='Button__Green'\r\n                     formStyle='FormBox'\r\n                  >\r\n                     <Input \r\n                        elemtype=\"input\" \r\n                        elemConfig={searchState.elemConfig}\r\n                        addChangeHandle={true}\r\n                        onChangeHandler={event => handleSearchInputChange(event)}\r\n                        addBlurHandle={true}\r\n                        onBlurHandler={handleSearchInputBlur}\r\n                        inpStyle='Form-Input'\r\n                        ref={searchInput}\r\n                     />\r\n                  </Form>\r\n                  <div className=\"Search__Result-Box\">\r\n                     {searchState.showSpinner ? <Spinner/> : \r\n                     <div className={searchState.showSearchResults ? \"Search__Results Search__Results--Active \" : \"Search__Results\"} >\r\n                        <p className=\"Search__TrackID\"><span className=\"Search__Span\">Накладная:</span> {searchState.searchResult.trackingNumber}</p>\r\n                        <div className=\"Search__Settings\">\r\n                           <Button\r\n                              btnStyle=\"Button__Blue\"\r\n                              handleClick={handleUpdateFormShow}\r\n                           >\r\n                              редактировать\r\n                           </Button>\r\n                           <Button\r\n                              btnStyle=\"Button__Red\"\r\n                              handleClick={handleDeleteInvoice}\r\n                           >\r\n                              удалить\r\n                           </Button>\r\n                        </div>\r\n                     </div>}\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className=\"Left-Side__Logout\"> \r\n               <Button  btnStyle=\"Button__Green\" handleClick={() => removeSessionKey('access__token')}>ВЫЙТИ</Button>            \r\n            </div>\r\n         </div>\r\n         <div className=\"Right-Side\">\r\n            {InvoiceType}             \r\n            <Modal show={formState.submitted} close={handleClose}>\r\n               <Popup />\r\n            </Modal>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default AdminPanel;","import React, { useState, useContext, useCallback } from 'react';\r\n\r\nimport './Auth.scss';\r\nimport Button from './../UI/Button/Button';\r\nimport Input from './../UI/Input/Input';\r\nimport axios from './../../axios-order';\r\nimport { AuthContext } from '../context/Auth-Context';\r\nimport { createInputConfig } from './../../helper/helper';\r\n\r\nconst Auth = props => {\r\n   const [authConfig, setAuthConfig] = useState({\r\n      inputConfig: {\r\n         username: createInputConfig('input', 'text', 'Логин', '', ''),\r\n         password: createInputConfig('input', 'password', 'Пароль', '', '')   \r\n      },\r\n      errorText: {\r\n         emptyFields: 'Заполните пустые поля',\r\n         wrongFields: 'Неверно введены Пароль или Логин',\r\n      },\r\n      displayErrorText: '',\r\n      isValid: true\r\n   });\r\n\r\n   const authContext = useContext(AuthContext);\r\n   const handleChange = useCallback((e, id) => {\r\n      const cloneInputConfig = {...authConfig.inputConfig};\r\n      cloneInputConfig[id].value = e.target.value \r\n      setAuthConfig(prevState => ({\r\n         ...prevState,\r\n         inputConfig: {\r\n            ...cloneInputConfig\r\n         }\r\n      }));\r\n   }, [authConfig.inputConfig]);\r\n   const handleAuth = e => {\r\n      e.preventDefault();\r\n      let status = true;\r\n      for(let val in authConfig.inputConfig) {\r\n         if (authConfig.inputConfig[val].value === '') {\r\n            status = false;\r\n         }\r\n      }\r\n      setAuthConfig(prevState => ({\r\n         ...prevState,\r\n         isValid: status,\r\n         displayErrorText: authConfig.errorText.emptyFields,\r\n      }));\r\n\r\n      if (status) {\r\n        const order = {};\r\n        for(let val in authConfig.inputConfig) {\r\n           order[val] = authConfig.inputConfig[val].value;\r\n        }\r\n        axios.post('/users/login', order)\r\n        .then(response => {\r\n           console.log(response);\r\n           sessionStorage.setItem('access__token', response.data.access_token);\r\n           authContext.login(true);\r\n        })\r\n        .catch(error => {\r\n         console.log(error.response);\r\n              setAuthConfig(prevState => ({\r\n               ...prevState,\r\n               isValid: false,\r\n               displayErrorText: authConfig.errorText.wrongFields\r\n            }));\r\n        })\r\n      }\r\n      // authContext.login(status);\r\n   };\r\n\r\n   const inputs = Object.keys(authConfig.inputConfig).map(inp => (\r\n         <Input\r\n            key={inp}\r\n            onChangeHandler={(event) => handleChange(event, inp)}\r\n            addChangeHandle={true}\r\n            elemtype={authConfig.inputConfig[inp].elemType}\r\n            elemConfig={authConfig.inputConfig[inp].elemConfig}\r\n            inpStyle='Auth-Form-Input'\r\n            add={false}\r\n            autoComplete={'on'}\r\n         />\r\n   ));\r\n   return (\r\n      <div className=\"Auth\">\r\n         <form className=\"Auth-Form\" onSubmit={event => handleAuth(event)}>\r\n            { inputs }          \r\n            <span className={authConfig.isValid ? \"Auth-Form__Error\" :  \"Auth-Form__Error Auth-Form__Error--Active\"}>{authConfig.displayErrorText}</span>\r\n            <Button btnStyle=\"Button__Green\">ВОЙТИ</Button>\r\n         </form> \r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Auth;\r\n","import React, { useContext } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport './App.scss';\r\nimport axios from './axios-order';\r\nimport Layout from './components/Layout/Layout';\r\nimport AdminPanel from './../src/containers/AdminPanel/AdminPanel';\r\nimport Auth from './components/Auth/Auth';\r\nimport { AuthContext } from './components/context/Auth-Context';\r\n\r\nconst App = () => {\r\n  axios.interceptors.request.use(req => {\r\n    const token = sessionStorage.getItem('access__token');    \r\n    if(!token) {return req;}  \r\n    req.headers.Authorization = `Bearer ${token}`;\r\n    return req;\r\n  });\r\n\r\n  const authContext = useContext(AuthContext); \r\n  const token = sessionStorage.getItem('access__token');   \r\n  let authAdmin = <Auth/> ;\r\n  if (authContext.isAuth || token) authAdmin = <AdminPanel/>;\r\n \r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename=\"/exmoto\">\r\n        <Switch>\r\n          {/* <Route exact path=\"/\" component={Layout}/> */}\r\n          <Route path=\"/operator\" >\r\n            {/* {authAdmin} */}\r\n            <Auth/>\r\n          </Route>\r\n        </Switch>  \r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport AuthContextProvider from './components/context/Auth-Context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthContextProvider>\r\n      <App />\r\n    </AuthContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}